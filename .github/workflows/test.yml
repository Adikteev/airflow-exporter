name: Test airflow-exporter

on:
  push:
    branches:
      - master
  pull_request:
    branches:
      - '*'

jobs:

  test:
 
    runs-on: ubuntu-latest
 
    strategy:
      fail-fast: false
      matrix:
        airflow-version:
          - "2.0.2"
          - "2.1.4"
          - "2.2.1"
        db:
          - postgres-9.6
          - mysql-5.7

    env:
      AIRFLOW_HOME: /home/runner/work/airflow-exporter/airflow-exporter/tests/
      AIRFLOW__CORE__LOAD_EXAMPLES: False

    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-python@v2
      with:
        python-version: '3.8'

    - name: Setup database
      id: setup-db
      run: |
        . ./env-${{ matrix.db }}.sh
        ${ RUN_DB }
        echo ::set-output name=sql_alchemy_conn::${SQL_ALCHEMY_CONN}

    - name: Install Airflow
      run: pip install "apache-airflow == ${{ matrix.airflow-version }}" psycopg2-binary wtforms==2.3.3

    - name: Install airflow-exporter
      run: pip install .

    - name: Init Airflow DB
      env:
        AIRFLOW__CORE__SQL_ALCHEMY_CONN: ${{ steps.setup-db.outputs.sql_alchemy_conn }}
      run: airflow db init

    - name: Prepare DAG statuses
      env:
        AIRFLOW__CORE__SQL_ALCHEMY_CONN: ${{ steps.setup-db.outputs.sql_alchemy_conn }}
      run: |
        airflow dags list

        airflow dags unpause dummy_dag
        airflow dags unpause slow_dag

        airflow dags trigger dummy_dag

        airflow scheduler -n 1

        airflow dags list

    - run: pip install requests

    - name: Wait for Airflow and query metrics
      env:
        AIRFLOW__CORE__SQL_ALCHEMY_CONN: ${{ steps.setup-db.outputs.sql_alchemy_conn }}
      run: |
        airflow webserver -D

        python tests/test_metrics_up.py
